name: Build and Push Production Docker Image

on:
  push:
    branches: [main, master]
    tags: ['v*']

env:
  REGISTRY: docker.io
  IMAGE_NAME: mtdd
  DOCKER_USERNAME: syednhashmi

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      - name: Image Summary
        run: |
          echo "🐳 **Docker Image Built Successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Deploy with:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "# Pull the image" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Run with custom user and environment" >> $GITHUB_STEP_SUMMARY
          echo "docker run -d --name mtdd-api -p 50051:50051 \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e USER_UID=1001 \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e USER_NAME=appuser \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e ENV_FILE_CONTENT='DB_CONFIG={\"type\":\"postgres\",\"host\":\"localhost\",\"user\":\"postgres\", \"password\":\"P@ssw0rd\",\"database\":\"testd\"}' \\" >> $GITHUB_STEP_SUMMARY
          echo "  ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "# Or mount .env file instead" >> $GITHUB_STEP_SUMMARY
          echo "docker run -d --name mtdd-api -p 50051:50051 \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e USER_UID=1001 \\" >> $GITHUB_STEP_SUMMARY
          echo "  -e USER_NAME=appuser \\" >> $GITHUB_STEP_SUMMARY
          echo "  -v \"\$(pwd)/.env:/app/.env:ro\" \\" >> $GITHUB_STEP_SUMMARY
          echo "  ${{ env.REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
