# ============================================
# gRPC PostgreSQL Database Facade - Environment Configuration
# ============================================
# Copy this file to .env and configure your values
# Never commit .env files with real credentials!
# ============================================

# ------------------------------
# Server Configuration
# ------------------------------
# gRPC server listening port (default: 50051)
PORT=50051

# ------------------------------
# Database Configuration (REQUIRED)
# ------------------------------
# PostgreSQL connection settings
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=your_password_here
DB_NAME=your_database_name

# ------------------------------
# Connection Pool Settings (OPTIONAL)
# ------------------------------
# Maximum number of connections in the pool (default: 100)
DB_POOL_MAX=100

# Minimum number of connections to maintain (default: 2)
DB_POOL_MIN=2

# Idle timeout in milliseconds (default: 30000)
DB_POOL_IDLE_TIMEOUT=30000

# ============================================
# EXAMPLE CONFIGURATIONS
# ============================================

# --- Local Development ---
# DB_HOST=localhost
# DB_PORT=5432
# DB_USER=postgres
# DB_PASSWORD=postgres
# DB_NAME=dev_db
# DB_POOL_MAX=20
# DB_POOL_MIN=2
# DB_POOL_IDLE_TIMEOUT=30000

# --- Production ---
# DB_HOST=prod-db.example.com
# DB_PORT=5432
# DB_USER=app_user
# DB_PASSWORD=strong_password_here
# DB_NAME=production_db
# DB_POOL_MAX=100
# DB_POOL_MIN=10
# DB_POOL_IDLE_TIMEOUT=10000

# --- Docker Compose ---
# DB_HOST=postgres
# DB_PORT=5432
# DB_USER=postgres
# DB_PASSWORD=postgres
# DB_NAME=mydb
# DB_POOL_MAX=50
# DB_POOL_MIN=5
# DB_POOL_IDLE_TIMEOUT=5000

# --- Cloud/RDS ---
# DB_HOST=mydb.xxxxx.us-east-1.rds.amazonaws.com
# DB_PORT=5432
# DB_USER=admin
# DB_PASSWORD=secure_password
# DB_NAME=app_db
# DB_POOL_MAX=200
# DB_POOL_MIN=20
# DB_POOL_IDLE_TIMEOUT=10000

# ============================================
# SECURITY NOTES
# ============================================
# 1. Use strong passwords in production
# 2. Store sensitive values in secret management systems (AWS Secrets Manager, Vault, etc.)
# 3. Use SSL/TLS connections for production databases
# 4. Rotate credentials regularly
# 5. Use least-privilege database user permissions
# 6. Never commit .env files with real credentials to version control

# ============================================
# CONNECTION POOL TUNING GUIDELINES
# ============================================
# DB_POOL_MAX:          Set based on expected concurrent requests (typically 10-200)
# DB_POOL_MIN:          Keep at least a few warm connections (2-10 for low traffic)
# DB_POOL_IDLE_TIMEOUT: Lower for high-traffic apps (5000-10000), higher for low-traffic (30000+)
#
# Example load scenarios:
# - Low traffic:     DB_POOL_MAX=20,  DB_POOL_MIN=2,  DB_POOL_IDLE_TIMEOUT=30000
# - Medium traffic:  DB_POOL_MAX=50,  DB_POOL_MIN=5,  DB_POOL_IDLE_TIMEOUT=10000
# - High traffic:    DB_POOL_MAX=100, DB_POOL_MIN=10, DB_POOL_IDLE_TIMEOUT=5000
# - Very high:       DB_POOL_MAX=200, DB_POOL_MIN=20, DB_POOL_IDLE_TIMEOUT=5000
